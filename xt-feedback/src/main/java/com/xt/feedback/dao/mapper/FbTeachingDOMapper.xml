<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xt.feedback.dao.mapper.FbTeachingDOMapper">
  <resultMap id="BaseResultMap" type="com.xt.feedback.dao.model.FbTeachingDO">
    <id column="tc_teaching_id" jdbcType="INTEGER" property="teachingId" />
    <result column="tc_tch_name" jdbcType="VARCHAR" property="tchName" />
    <result column="tc_start_year" jdbcType="VARCHAR" property="startYear" />
    <result column="tc_end_year" jdbcType="VARCHAR" property="endYear" />
    <result column="tc_term" jdbcType="TINYINT" property="term" />
    <result column="tc_course" jdbcType="VARCHAR" property="course" />
    <result column="tc_course_no" jdbcType="VARCHAR" property="courseNo" />
    <result column="tc_course_order" jdbcType="VARCHAR" property="courseOrder" />
    <result column="tc_major" jdbcType="VARCHAR" property="major" />
    <result column="tc_classes" jdbcType="VARCHAR" property="classes" />
    <result column="tc_number" jdbcType="INTEGER" property="number" />
    <result column="tc_orders" jdbcType="BIGINT" property="orders" />
    <result column="tc_ctime" jdbcType="BIGINT" property="ctime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="resultColumns != null">
      <foreach collection="resultColumns.columns" item="item" separator=",">
        tc.${item} as tc_${item}
      </foreach>
    </if>
    <if test="resultColumns == null">
      tc.teaching_id as tc_teaching_id, tc.tch_name as tc_tch_name, tc.start_year as tc_start_year, 
      tc.end_year as tc_end_year, tc.term as tc_term, tc.course as tc_course, tc.course_no as tc_course_no, 
      tc.course_order as tc_course_order, tc.major as tc_major, tc.classes as tc_classes, 
      tc.number as tc_number, tc.orders as tc_orders, tc.ctime as tc_ctime
    </if>
  </sql>
  <select id="selectByExample" parameterType="com.xt.feedback.dao.model.FbTeachingDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fb_teaching tc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fb_teaching tc
    where tc.teaching_id = #{teachingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fb_teaching
    where teaching_id = #{teachingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.feedback.dao.model.FbTeachingDOExample">
    delete tc from fb_teaching tc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.feedback.dao.model.FbTeachingDO">
    <selectKey keyProperty="teachingId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fb_teaching (tch_name, start_year, end_year, 
      term, course, course_no, 
      course_order, major, classes, 
      number, orders, ctime
      )
    values (#{tchName,jdbcType=VARCHAR}, #{startYear,jdbcType=VARCHAR}, #{endYear,jdbcType=VARCHAR}, 
      #{term,jdbcType=TINYINT}, #{course,jdbcType=VARCHAR}, #{courseNo,jdbcType=VARCHAR}, 
      #{courseOrder,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{orders,jdbcType=BIGINT}, #{ctime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xt.feedback.dao.model.FbTeachingDO">
    <selectKey keyProperty="teachingId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fb_teaching
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tchName != null">
        tch_name,
      </if>
      <if test="startYear != null">
        start_year,
      </if>
      <if test="endYear != null">
        end_year,
      </if>
      <if test="term != null">
        term,
      </if>
      <if test="course != null">
        course,
      </if>
      <if test="courseNo != null">
        course_no,
      </if>
      <if test="courseOrder != null">
        course_order,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tchName != null">
        #{tchName,jdbcType=VARCHAR},
      </if>
      <if test="startYear != null">
        #{startYear,jdbcType=VARCHAR},
      </if>
      <if test="endYear != null">
        #{endYear,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        #{term,jdbcType=TINYINT},
      </if>
      <if test="course != null">
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="courseNo != null">
        #{courseNo,jdbcType=VARCHAR},
      </if>
      <if test="courseOrder != null">
        #{courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.feedback.dao.model.FbTeachingDOExample" resultType="java.lang.Long">
    select count(*) from fb_teaching tc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fb_teaching tc
    <set>
      <if test="record.teachingId != null">
        tc.teaching_id = #{record.teachingId,jdbcType=INTEGER},
      </if>
      <if test="record.tchName != null">
        tc.tch_name = #{record.tchName,jdbcType=VARCHAR},
      </if>
      <if test="record.startYear != null">
        tc.start_year = #{record.startYear,jdbcType=VARCHAR},
      </if>
      <if test="record.endYear != null">
        tc.end_year = #{record.endYear,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        tc.term = #{record.term,jdbcType=TINYINT},
      </if>
      <if test="record.course != null">
        tc.course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNo != null">
        tc.course_no = #{record.courseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.courseOrder != null">
        tc.course_order = #{record.courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        tc.major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        tc.classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        tc.number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.orders != null">
        tc.orders = #{record.orders,jdbcType=BIGINT},
      </if>
      <if test="record.ctime != null">
        tc.ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fb_teaching tc
    set tc.teaching_id = #{record.teachingId,jdbcType=INTEGER},
      tc.tch_name = #{record.tchName,jdbcType=VARCHAR},
      tc.start_year = #{record.startYear,jdbcType=VARCHAR},
      tc.end_year = #{record.endYear,jdbcType=VARCHAR},
      tc.term = #{record.term,jdbcType=TINYINT},
      tc.course = #{record.course,jdbcType=VARCHAR},
      tc.course_no = #{record.courseNo,jdbcType=VARCHAR},
      tc.course_order = #{record.courseOrder,jdbcType=VARCHAR},
      tc.major = #{record.major,jdbcType=VARCHAR},
      tc.classes = #{record.classes,jdbcType=VARCHAR},
      tc.number = #{record.number,jdbcType=INTEGER},
      tc.orders = #{record.orders,jdbcType=BIGINT},
      tc.ctime = #{record.ctime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.feedback.dao.model.FbTeachingDO">
    update fb_teaching
    <set>
      <if test="tchName != null">
        tch_name = #{tchName,jdbcType=VARCHAR},
      </if>
      <if test="startYear != null">
        start_year = #{startYear,jdbcType=VARCHAR},
      </if>
      <if test="endYear != null">
        end_year = #{endYear,jdbcType=VARCHAR},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=TINYINT},
      </if>
      <if test="course != null">
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="courseNo != null">
        course_no = #{courseNo,jdbcType=VARCHAR},
      </if>
      <if test="courseOrder != null">
        course_order = #{courseOrder,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
    </set>
    where teaching_id = #{teachingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.feedback.dao.model.FbTeachingDO">
    update fb_teaching
    set tch_name = #{tchName,jdbcType=VARCHAR},
      start_year = #{startYear,jdbcType=VARCHAR},
      end_year = #{endYear,jdbcType=VARCHAR},
      term = #{term,jdbcType=TINYINT},
      course = #{course,jdbcType=VARCHAR},
      course_no = #{courseNo,jdbcType=VARCHAR},
      course_order = #{courseOrder,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      orders = #{orders,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=BIGINT}
    where teaching_id = #{teachingId,jdbcType=INTEGER}
  </update>
  <sql id="All_Column_List">
    tc.teaching_id as tc_teaching_id, tc.tch_name as tc_tch_name, tc.start_year as tc_start_year, 
    tc.end_year as tc_end_year, tc.term as tc_term, tc.course as tc_course, tc.course_no as tc_course_no, 
    tc.course_order as tc_course_order, tc.major as tc_major, tc.classes as tc_classes, 
    tc.number as tc_number, tc.orders as tc_orders, tc.ctime as tc_ctime
  </sql>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>