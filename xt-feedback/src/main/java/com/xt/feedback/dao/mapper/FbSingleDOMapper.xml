<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xt.feedback.dao.mapper.FbSingleDOMapper">
  <resultMap id="BaseResultMap" type="com.xt.feedback.dao.model.FbSingleDO">
    <id column="sg_single_id" jdbcType="INTEGER" property="singleId" />
    <result column="sg_uuid" jdbcType="CHAR" property="uuid" />
    <result column="sg_part_id" jdbcType="INTEGER" property="partId" />
    <result column="sg_content" jdbcType="VARCHAR" property="content" />
    <result column="sg_sort" jdbcType="INTEGER" property="sort" />
    <result column="sg_qtype" jdbcType="TINYINT" property="qtype" />
    <result column="sg_orders" jdbcType="BIGINT" property="orders" />
    <result column="sg_ctime" jdbcType="BIGINT" property="ctime" />
    <result column="sg_teaching_id" jdbcType="INTEGER" property="teachingId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <if test="resultColumns != null">
      <foreach collection="resultColumns.columns" item="item" separator=",">
        sg.${item} as sg_${item}
      </foreach>
    </if>
    <if test="resultColumns == null">
      sg.single_id as sg_single_id, sg.uuid as sg_uuid, sg.part_id as sg_part_id, sg.content as sg_content, 
      sg.sort as sg_sort, sg.qtype as sg_qtype, sg.orders as sg_orders, sg.ctime as sg_ctime, 
      sg.teaching_id as sg_teaching_id
    </if>
  </sql>
  <select id="selectByExample" parameterType="com.xt.feedback.dao.model.FbSingleDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fb_single sg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fb_single sg
    where sg.single_id = #{singleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fb_single
    where single_id = #{singleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.feedback.dao.model.FbSingleDOExample">
    delete sg from fb_single sg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.feedback.dao.model.FbSingleDO">
    <selectKey keyProperty="singleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fb_single (uuid, part_id, content, 
      sort, qtype, orders, 
      ctime, teaching_id)
    values (#{uuid,jdbcType=CHAR}, #{partId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{qtype,jdbcType=TINYINT}, #{orders,jdbcType=BIGINT}, 
      #{ctime,jdbcType=BIGINT}, #{teachingId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xt.feedback.dao.model.FbSingleDO">
    <selectKey keyProperty="singleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fb_single
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="partId != null">
        part_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="qtype != null">
        qtype,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="teachingId != null">
        teaching_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="partId != null">
        #{partId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="qtype != null">
        #{qtype,jdbcType=TINYINT},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="teachingId != null">
        #{teachingId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.feedback.dao.model.FbSingleDOExample" resultType="java.lang.Long">
    select count(*) from fb_single sg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fb_single sg
    <set>
      <if test="record.singleId != null">
        sg.single_id = #{record.singleId,jdbcType=INTEGER},
      </if>
      <if test="record.uuid != null">
        sg.uuid = #{record.uuid,jdbcType=CHAR},
      </if>
      <if test="record.partId != null">
        sg.part_id = #{record.partId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        sg.content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sg.sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.qtype != null">
        sg.qtype = #{record.qtype,jdbcType=TINYINT},
      </if>
      <if test="record.orders != null">
        sg.orders = #{record.orders,jdbcType=BIGINT},
      </if>
      <if test="record.ctime != null">
        sg.ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.teachingId != null">
        sg.teaching_id = #{record.teachingId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fb_single sg
    set sg.single_id = #{record.singleId,jdbcType=INTEGER},
      sg.uuid = #{record.uuid,jdbcType=CHAR},
      sg.part_id = #{record.partId,jdbcType=INTEGER},
      sg.content = #{record.content,jdbcType=VARCHAR},
      sg.sort = #{record.sort,jdbcType=INTEGER},
      sg.qtype = #{record.qtype,jdbcType=TINYINT},
      sg.orders = #{record.orders,jdbcType=BIGINT},
      sg.ctime = #{record.ctime,jdbcType=BIGINT},
      sg.teaching_id = #{record.teachingId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.feedback.dao.model.FbSingleDO">
    update fb_single
    <set>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=CHAR},
      </if>
      <if test="partId != null">
        part_id = #{partId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="qtype != null">
        qtype = #{qtype,jdbcType=TINYINT},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="teachingId != null">
        teaching_id = #{teachingId,jdbcType=INTEGER},
      </if>
    </set>
    where single_id = #{singleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.feedback.dao.model.FbSingleDO">
    update fb_single
    set uuid = #{uuid,jdbcType=CHAR},
      part_id = #{partId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      qtype = #{qtype,jdbcType=TINYINT},
      orders = #{orders,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=BIGINT},
      teaching_id = #{teachingId,jdbcType=INTEGER}
    where single_id = #{singleId,jdbcType=INTEGER}
  </update>
  <sql id="All_Column_List">
    sg.single_id as sg_single_id, sg.uuid as sg_uuid, sg.part_id as sg_part_id, sg.content as sg_content, 
    sg.sort as sg_sort, sg.qtype as sg_qtype, sg.orders as sg_orders, sg.ctime as sg_ctime, 
    sg.teaching_id as sg_teaching_id
  </sql>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>